{
  "contractName": "DividendPayingTokenInterface",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "DividendWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "DividendsDistributed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "dividendOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributeDividends",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawDividend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"distributeDividends\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"An interface for a dividend-paying token contract.\",\"events\":{\"DividendWithdrawn(address,uint256)\":{\"details\":\"This event MUST emit when an address withdraws their dividend.\",\"params\":{\"to\":\"The address which withdraws ether from this contract.\",\"weiAmount\":\"The amount of withdrawn ether in wei.\"}},\"DividendsDistributed(address,uint256)\":{\"details\":\"This event MUST emit when ether is distributed to token holders.\",\"params\":{\"from\":\"The address which sends ether to this contract.\",\"weiAmount\":\"The amount of distributed ether in wei.\"}}},\"kind\":\"dev\",\"methods\":{\"distributeDividends()\":{\"details\":\"SHOULD distribute the paid ether to token holders as dividends.  SHOULD NOT directly transfer ether to token holders in this function.  MUST emit a `DividendsDistributed` event when the amount of distributed ether is greater than 0.\"},\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawDividend()\":{\"details\":\"SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\"}},\"title\":\"Dividend-Paying Token Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"distributeDividends()\":{\"notice\":\"Distributes ether to token holders as dividends.\"},\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DividendPayingTokenInterface.sol\":\"DividendPayingTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x5aa21462350a3f29d3f0eb0aeedd0fd93f32533237ae88e6fbfdc2f83296fe39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97d1144ca7ded140f735bbc8f5af9cb8febcb8b6b92478a5e02f0ca6cfd70348\",\"dweb:/ipfs/Qmd3z1at3vCQQGnsa2GWLWtj8FKgWyPtZcagiJyVQ6QMWb\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n\n/// @title Dividend-Paying Token Interface\n/// @author Roger Wu (https://github.com/roger-wu)\n/// @dev An interface for a dividend-paying token contract.\ninterface DividendPayingTokenInterface {\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function dividendOf(address _owner) external view returns(uint256);\n\n  /// @notice Distributes ether to token holders as dividends.\n  /// @dev SHOULD distribute the paid ether to token holders as dividends.\n  ///  SHOULD NOT directly transfer ether to token holders in this function.\n  ///  MUST emit a `DividendsDistributed` event when the amount of distributed ether is greater than 0.\n  function distributeDividends() external payable;\n\n  /// @notice Withdraws the ether distributed to the sender.\n  /// @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  ///  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\n  function withdrawDividend() external;\n\n  /// @dev This event MUST emit when ether is distributed to token holders.\n  /// @param from The address which sends ether to this contract.\n  /// @param weiAmount The amount of distributed ether in wei.\n  event DividendsDistributed(\n    address indexed from,\n    uint256 weiAmount\n  );\n\n  /// @dev This event MUST emit when an address withdraws their dividend.\n  /// @param to The address which withdraws ether from this contract.\n  /// @param weiAmount The amount of withdrawn ether in wei.\n  event DividendWithdrawn(\n    address indexed to,\n    uint256 weiAmount\n  );\n}",
  "sourcePath": "C:\\Users\\Mahesh\\NodeReact\\Blockchain\\CLIENT-PROJECTS\\PHOENIX_DASHBOARD\\contracts\\DividendPayingTokenInterface.sol",
  "ast": {
    "absolutePath": "project:/contracts/DividendPayingTokenInterface.sol",
    "exportedSymbols": {
      "DividendPayingTokenInterface": [
        483
      ]
    },
    "id": 484,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 451,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 452,
          "nodeType": "StructuredDocumentation",
          "src": "59:154:2",
          "text": "@title Dividend-Paying Token Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev An interface for a dividend-paying token contract."
        },
        "fullyImplemented": false,
        "id": 483,
        "linearizedBaseContracts": [
          483
        ],
        "name": "DividendPayingTokenInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 453,
              "nodeType": "StructuredDocumentation",
              "src": "256:199:2",
              "text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
            },
            "functionSelector": "91b89fba",
            "id": 460,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "dividendOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 460,
                  "src": "478:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "477:16:2"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 460,
                  "src": "516:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "515:9:2"
            },
            "scope": 483,
            "src": "458:67:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 461,
              "nodeType": "StructuredDocumentation",
              "src": "529:316:2",
              "text": "@notice Distributes ether to token holders as dividends.\n @dev SHOULD distribute the paid ether to token holders as dividends.\n  SHOULD NOT directly transfer ether to token holders in this function.\n  MUST emit a `DividendsDistributed` event when the amount of distributed ether is greater than 0."
            },
            "functionSelector": "03c83302",
            "id": 464,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "distributeDividends",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "876:2:2"
            },
            "returnParameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:0:2"
            },
            "scope": 483,
            "src": "848:48:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 465,
              "nodeType": "StructuredDocumentation",
              "src": "900:291:2",
              "text": "@notice Withdraws the ether distributed to the sender.\n @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
            },
            "functionSelector": "6a474002",
            "id": 468,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDividend",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1219:2:2"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1230:0:2"
            },
            "scope": 483,
            "src": "1194:37:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 469,
              "nodeType": "StructuredDocumentation",
              "src": "1235:202:2",
              "text": "@dev This event MUST emit when ether is distributed to token holders.\n @param from The address which sends ether to this contract.\n @param weiAmount The amount of distributed ether in wei."
            },
            "id": 475,
            "name": "DividendsDistributed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 475,
                  "src": "1472:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 475,
                  "src": "1498:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1498:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1466:53:2"
            },
            "src": "1440:80:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 476,
              "nodeType": "StructuredDocumentation",
              "src": "1524:202:2",
              "text": "@dev This event MUST emit when an address withdraws their dividend.\n @param to The address which withdraws ether from this contract.\n @param weiAmount The amount of withdrawn ether in wei."
            },
            "id": 482,
            "name": "DividendWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 482,
                  "src": "1758:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1758:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 482,
                  "src": "1782:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1752:51:2"
            },
            "src": "1729:75:2"
          }
        ],
        "scope": 484,
        "src": "213:1593:2"
      }
    ],
    "src": "33:1773:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/DividendPayingTokenInterface.sol",
      "exportedSymbols": {
        "DividendPayingTokenInterface": [
          483
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".2"
          ]
        },
        "id": 451,
        "name": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            483
          ],
          "name": "DividendPayingTokenInterface",
          "scope": 484
        },
        "children": [
          {
            "attributes": {
              "text": "@title Dividend-Paying Token Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev An interface for a dividend-paying token contract."
            },
            "id": 452,
            "name": "StructuredDocumentation",
            "src": "59:154:2"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "91b89fba",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "dividendOf",
              "overrides": null,
              "scope": 483,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
                },
                "id": 453,
                "name": "StructuredDocumentation",
                "src": "256:199:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_owner",
                      "overrides": null,
                      "scope": 460,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 454,
                        "name": "ElementaryTypeName",
                        "src": "478:7:2"
                      }
                    ],
                    "id": 455,
                    "name": "VariableDeclaration",
                    "src": "478:14:2"
                  }
                ],
                "id": 456,
                "name": "ParameterList",
                "src": "477:16:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 460,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 457,
                        "name": "ElementaryTypeName",
                        "src": "516:7:2"
                      }
                    ],
                    "id": 458,
                    "name": "VariableDeclaration",
                    "src": "516:7:2"
                  }
                ],
                "id": 459,
                "name": "ParameterList",
                "src": "515:9:2"
              }
            ],
            "id": 460,
            "name": "FunctionDefinition",
            "src": "458:67:2"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "03c83302",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "distributeDividends",
              "overrides": null,
              "scope": 483,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Distributes ether to token holders as dividends.\n @dev SHOULD distribute the paid ether to token holders as dividends.\n  SHOULD NOT directly transfer ether to token holders in this function.\n  MUST emit a `DividendsDistributed` event when the amount of distributed ether is greater than 0."
                },
                "id": 461,
                "name": "StructuredDocumentation",
                "src": "529:316:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 462,
                "name": "ParameterList",
                "src": "876:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 463,
                "name": "ParameterList",
                "src": "895:0:2"
              }
            ],
            "id": 464,
            "name": "FunctionDefinition",
            "src": "848:48:2"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "6a474002",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawDividend",
              "overrides": null,
              "scope": 483,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Withdraws the ether distributed to the sender.\n @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
                },
                "id": 465,
                "name": "StructuredDocumentation",
                "src": "900:291:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 466,
                "name": "ParameterList",
                "src": "1219:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 467,
                "name": "ParameterList",
                "src": "1230:0:2"
              }
            ],
            "id": 468,
            "name": "FunctionDefinition",
            "src": "1194:37:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "DividendsDistributed"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev This event MUST emit when ether is distributed to token holders.\n @param from The address which sends ether to this contract.\n @param weiAmount The amount of distributed ether in wei."
                },
                "id": 469,
                "name": "StructuredDocumentation",
                "src": "1235:202:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "overrides": null,
                      "scope": 475,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 470,
                        "name": "ElementaryTypeName",
                        "src": "1472:7:2"
                      }
                    ],
                    "id": 471,
                    "name": "VariableDeclaration",
                    "src": "1472:20:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "weiAmount",
                      "overrides": null,
                      "scope": 475,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 472,
                        "name": "ElementaryTypeName",
                        "src": "1498:7:2"
                      }
                    ],
                    "id": 473,
                    "name": "VariableDeclaration",
                    "src": "1498:17:2"
                  }
                ],
                "id": 474,
                "name": "ParameterList",
                "src": "1466:53:2"
              }
            ],
            "id": 475,
            "name": "EventDefinition",
            "src": "1440:80:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "DividendWithdrawn"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev This event MUST emit when an address withdraws their dividend.\n @param to The address which withdraws ether from this contract.\n @param weiAmount The amount of withdrawn ether in wei."
                },
                "id": 476,
                "name": "StructuredDocumentation",
                "src": "1524:202:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "overrides": null,
                      "scope": 482,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 477,
                        "name": "ElementaryTypeName",
                        "src": "1758:7:2"
                      }
                    ],
                    "id": 478,
                    "name": "VariableDeclaration",
                    "src": "1758:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "weiAmount",
                      "overrides": null,
                      "scope": 482,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 479,
                        "name": "ElementaryTypeName",
                        "src": "1782:7:2"
                      }
                    ],
                    "id": 480,
                    "name": "VariableDeclaration",
                    "src": "1782:17:2"
                  }
                ],
                "id": 481,
                "name": "ParameterList",
                "src": "1752:51:2"
              }
            ],
            "id": 482,
            "name": "EventDefinition",
            "src": "1729:75:2"
          }
        ],
        "id": 483,
        "name": "ContractDefinition",
        "src": "213:1593:2"
      }
    ],
    "id": 484,
    "name": "SourceUnit",
    "src": "33:1773:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-16T06:11:08.328Z",
  "devdoc": {
    "author": "Roger Wu (https://github.com/roger-wu)",
    "details": "An interface for a dividend-paying token contract.",
    "events": {
      "DividendWithdrawn(address,uint256)": {
        "details": "This event MUST emit when an address withdraws their dividend.",
        "params": {
          "to": "The address which withdraws ether from this contract.",
          "weiAmount": "The amount of withdrawn ether in wei."
        }
      },
      "DividendsDistributed(address,uint256)": {
        "details": "This event MUST emit when ether is distributed to token holders.",
        "params": {
          "from": "The address which sends ether to this contract.",
          "weiAmount": "The amount of distributed ether in wei."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "distributeDividends()": {
        "details": "SHOULD distribute the paid ether to token holders as dividends.  SHOULD NOT directly transfer ether to token holders in this function.  MUST emit a `DividendsDistributed` event when the amount of distributed ether is greater than 0."
      },
      "dividendOf(address)": {
        "params": {
          "_owner": "The address of a token holder."
        },
        "returns": {
          "_0": "The amount of dividend in wei that `_owner` can withdraw."
        }
      },
      "withdrawDividend()": {
        "details": "SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
      }
    },
    "title": "Dividend-Paying Token Interface",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "distributeDividends()": {
        "notice": "Distributes ether to token holders as dividends."
      },
      "dividendOf(address)": {
        "notice": "View the amount of dividend in wei that an address can withdraw."
      },
      "withdrawDividend()": {
        "notice": "Withdraws the ether distributed to the sender."
      }
    },
    "version": 1
  }
}